Changes for lime-1.2.3

	Large file support is invoked with --enable-largefiles

Changes going from lime-1.2.1 to lime-1.2.2

	Message end and begin bits are no longer checked for consistency.
	It is the user's responsibility to assure that they are correct.

Changes going from lime-1.1 to lime-1.2

	Add these functions:
	
	int limeSetReaderPointer(LimeReader *r, off_t offset);
	  Sets the file pointer to "offset", assumed to be the beginning of
	  a LIME record.  The reader state is reset to simulate the beginning
	  of the file.
	
	off_t limeGetReaderPointer(LimeReader *r);
	  Gets the file pointer to the next LIME record (current pointer
	  if no record header has been read).
	
	int limeReaderSetState(LimeReader *rdest, LimeReader *rsrc );
	  Copies the reader state rsrc into the reader rdest.
	
	int limeWriterSetState(LimeWriter *wdest, LimeWriter *wsrc);
	  Same for writer states.
	
	The first two are needed in order to be able to suspend reading a LIME
	file, close the file, and then open and resume later.  The last two
	anticipate functions needed to do parallel I/O (a future project) for
	which it will be necessary to be able to synchronize multiple LIME
	readers and writers.
	
	------------------------------
	Activate these functions:
	
	int limeReaderSeek(LimeReader *r, off_t offset, int whence);
	
	int limeWriterSeek(LimeWriter *w, off_t offset, int whence);
	
	where "whence" can be SEEK_SET or SEEK_CUR.  These functions were
	already there, but didn't do anything.
	
	Seeks are permitted only inside an open record.  This function allows
	random-access reading and writing needed both for file conversion and
	eventual parallel I/O.
	
	------------------------------
	Internal changes:
	
	  Add two members to the LIME reader and LIME writer structure:
	
	   off_t rec_ptr;     /* File pointer relative to rec_start */
	   off_t rec_start;   /* File pointer at start of binary payload */
	
	  The reader member off_t bytes_left has become obsolete.
	
	  I have retained bytes_left in the writer.  A record is closed when
	  the total of bytes written equals the promised record length.
	
	------------------------------
	Behavioral changes:
	
	  Drop automatic terminal null records.
	
	  Originally, when a LIME file was closed and the last record was not
	  the end of a message, LIME would write a terminal null record to end
	  the message.  This is inconvenient when we start allowing a user to
	  close a file temporarily and reopen it later for appending.  We
	  could have added a new function for a temporary close, but I didn't
	  see the real need for this feature in the first place.  So I
	  suppressed it.
	
	  Weaken message begin/end consistency checking
	
	  We close readers and reopen them with seeks.  Unless we are
	  meticulous about saving and restoring state, we can't check the
	  consistency of the MB/ME flags that straddle the close/open.
	  So when we open a reader, we no longer check for consistency.
	
	---------------------------------------------------------------------

